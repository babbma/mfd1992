<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Uncomment and your base-package here:
         <context:component-scan
            base-package="org.springframework.samples.web"/>  -->


    <mvc:annotation-driven />
    <mvc:resources location="/resource/js/**" mapping="/resource/js/"/>
    <mvc:resources location="/resource/css/**" mapping="/resource/css/"/>
    <mvc:resources location="/resource/images/**" mapping="/resource/images/"/>

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	        <!-- Example: a logical view name of 'showMessage' is mapped to '/WEB-INF/jsp/showMessage.jsp' -->
	        <property name="prefix" value="/WEB-INF/view/"/>
	        <property name="suffix" value=".jsp"/>
	</bean>
	<context:component-scan base-package="com.app.web"></context:component-scan>
	
	
	 <!--配置拦截器, 多个拦截器,顺序执行 -->   
    <mvc:interceptors> 
        <!-- <mvc:interceptor>    
            匹配的是url路径    
            <mvc:mapping path="/" />  
            <bean class="com.touzi.interceptor.MyInterceptor"></bean>    
        </mvc:interceptor>    -->
        <mvc:interceptor>    
            <!-- 匹配的是url路径  --> 
            <mvc:mapping path="/" /> 
            <!-- <mvc:mapping path="/user/**" />  
            <mvc:mapping path="/test/**" />   -->
              
            <bean class="com.app.intercepter.CommonInterceptor"></bean>    
        </mvc:interceptor>  
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->  
    </mvc:interceptors>

</beans>
